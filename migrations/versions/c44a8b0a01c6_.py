"""empty message

Revision ID: c44a8b0a01c6
Revises: d3b65cb9632c
Create Date: 2024-09-24 14:18:03.664448

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c44a8b0a01c6'
down_revision = 'd3b65cb9632c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saga',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=180), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('types_books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('universe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=180), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('synopsis', sa.Text(), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=False),
    sa.Column('types_Books_id', sa.Integer(), nullable=False),
    sa.Column('saga_id', sa.Integer(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('spin_off_de_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['saga_id'], ['saga.id'], ),
    sa.ForeignKeyConstraint(['spin_off_de_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['types_Books_id'], ['types_books.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=120), nullable=False))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.drop_column('name')

    op.drop_table('favorites')
    op.drop_table('book_author')
    op.drop_table('book')
    op.drop_table('universe')
    op.drop_table('types_books')
    op.drop_table('saga')
    op.drop_table('author')
    # ### end Alembic commands ###
